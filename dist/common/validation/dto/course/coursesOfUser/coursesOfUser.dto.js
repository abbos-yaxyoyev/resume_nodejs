"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoursesOfUserGetDto = exports.CourseOfUserDto = exports.CourseOfUserDtoGroup = void 0;
const tslib_1 = require("tslib");
const class_validator_1 = require("class-validator");
const common_dto_1 = require("../../../common.dto");
const paging_dto_1 = require("../../paging.dto");
class CourseOfUserDtoGroup extends common_dto_1.CommonDtoGroup {
}
exports.CourseOfUserDtoGroup = CourseOfUserDtoGroup;
class CourseOfUserDto extends common_dto_1.CommonDto {
}
tslib_1.__decorate([
    (0, class_validator_1.IsOptional)({ groups: [CourseOfUserDtoGroup.CREATE, CourseOfUserDtoGroup.UPDATE] }),
    (0, class_validator_1.ValidateIf)((data, value) => value != null),
    (0, class_validator_1.IsMongoId)({ groups: [CourseOfUserDtoGroup.CREATE, CourseOfUserDtoGroup.UPDATE] }),
    tslib_1.__metadata("design:type", String)
], CourseOfUserDto.prototype, "courseId", void 0);
tslib_1.__decorate([
    (0, class_validator_1.IsOptional)({ groups: [CourseOfUserDtoGroup.CREATE] }),
    tslib_1.__metadata("design:type", String)
], CourseOfUserDto.prototype, "userId", void 0);
exports.CourseOfUserDto = CourseOfUserDto;
class CoursesOfUserGetDto extends paging_dto_1.PagingDto {
}
tslib_1.__decorate([
    (0, class_validator_1.IsOptional)({ groups: [CourseOfUserDtoGroup.PAGENATION] }),
    (0, class_validator_1.IsMongoId)({ groups: [CourseOfUserDtoGroup.PAGENATION] }),
    tslib_1.__metadata("design:type", String)
], CoursesOfUserGetDto.prototype, "courseId", void 0);
tslib_1.__decorate([
    (0, class_validator_1.IsOptional)({ groups: [CourseOfUserDtoGroup.PAGENATION] }),
    (0, class_validator_1.IsMongoId)({ groups: [CourseOfUserDtoGroup.PAGENATION] }),
    tslib_1.__metadata("design:type", String)
], CoursesOfUserGetDto.prototype, "userId", void 0);
exports.CoursesOfUserGetDto = CoursesOfUserGetDto;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY291cnNlc09mVXNlci5kdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tbW9uL3ZhbGlkYXRpb24vZHRvL2NvdXJzZS9jb3Vyc2VzT2ZVc2VyL2NvdXJzZXNPZlVzZXIuZHRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxxREFHeUI7QUFDekIsb0RBQWdFO0FBQ2hFLGlEQUE2QztBQUU3QyxNQUFhLG9CQUFxQixTQUFRLDJCQUFjO0NBQUk7QUFBNUQsb0RBQTREO0FBRTVELE1BQWEsZUFBZ0IsU0FBUSxzQkFBUztDQVM3QztBQUpDO0lBSEMsSUFBQSw0QkFBVSxFQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsb0JBQW9CLENBQUMsTUFBTSxFQUFFLG9CQUFvQixDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7SUFDbEYsSUFBQSw0QkFBVSxFQUFDLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQztJQUMxQyxJQUFBLDJCQUFTLEVBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLEVBQUUsb0JBQW9CLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQzs7aURBQ2pFO0FBR2pCO0lBREMsSUFBQSw0QkFBVSxFQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQzs7K0NBQ3ZDO0FBUmpCLDBDQVNDO0FBRUQsTUFBYSxtQkFBb0IsU0FBUSxzQkFBUztDQVFqRDtBQUxDO0lBRkMsSUFBQSw0QkFBVSxFQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQztJQUN6RCxJQUFBLDJCQUFTLEVBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDOztxREFDekM7QUFJaEI7SUFGQyxJQUFBLDRCQUFVLEVBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO0lBQ3pELElBQUEsMkJBQVMsRUFBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLG9CQUFvQixDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUM7O21EQUMzQztBQVBoQixrREFRQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgSXNNb25nb0lkLFxyXG4gIElzT3B0aW9uYWwsIFZhbGlkYXRlSWZcclxufSBmcm9tICdjbGFzcy12YWxpZGF0b3InO1xyXG5pbXBvcnQgeyBDb21tb25EdG8sIENvbW1vbkR0b0dyb3VwIH0gZnJvbSAnLi4vLi4vLi4vY29tbW9uLmR0byc7XHJcbmltcG9ydCB7IFBhZ2luZ0R0byB9IGZyb20gJy4uLy4uL3BhZ2luZy5kdG8nO1xyXG5cclxuZXhwb3J0IGNsYXNzIENvdXJzZU9mVXNlckR0b0dyb3VwIGV4dGVuZHMgQ29tbW9uRHRvR3JvdXAgeyB9XHJcblxyXG5leHBvcnQgY2xhc3MgQ291cnNlT2ZVc2VyRHRvIGV4dGVuZHMgQ29tbW9uRHRvIHtcclxuXHJcbiAgQElzT3B0aW9uYWwoeyBncm91cHM6IFtDb3Vyc2VPZlVzZXJEdG9Hcm91cC5DUkVBVEUsIENvdXJzZU9mVXNlckR0b0dyb3VwLlVQREFURV0gfSlcclxuICBAVmFsaWRhdGVJZigoZGF0YSwgdmFsdWUpID0+IHZhbHVlICE9IG51bGwpXHJcbiAgQElzTW9uZ29JZCh7IGdyb3VwczogW0NvdXJzZU9mVXNlckR0b0dyb3VwLkNSRUFURSwgQ291cnNlT2ZVc2VyRHRvR3JvdXAuVVBEQVRFXSB9KVxyXG4gIGNvdXJzZUlkOiBzdHJpbmc7XHJcblxyXG4gIEBJc09wdGlvbmFsKHsgZ3JvdXBzOiBbQ291cnNlT2ZVc2VyRHRvR3JvdXAuQ1JFQVRFXSB9KVxyXG4gIHVzZXJJZDogc3RyaW5nO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgQ291cnNlc09mVXNlckdldER0byBleHRlbmRzIFBhZ2luZ0R0byB7XHJcbiAgQElzT3B0aW9uYWwoeyBncm91cHM6IFtDb3Vyc2VPZlVzZXJEdG9Hcm91cC5QQUdFTkFUSU9OXSB9KVxyXG4gIEBJc01vbmdvSWQoeyBncm91cHM6IFtDb3Vyc2VPZlVzZXJEdG9Hcm91cC5QQUdFTkFUSU9OXSB9KVxyXG4gIGNvdXJzZUlkOiBzdHJpbmdcclxuXHJcbiAgQElzT3B0aW9uYWwoeyBncm91cHM6IFtDb3Vyc2VPZlVzZXJEdG9Hcm91cC5QQUdFTkFUSU9OXSB9KVxyXG4gIEBJc01vbmdvSWQoeyBncm91cHM6IFtDb3Vyc2VPZlVzZXJEdG9Hcm91cC5QQUdFTkFUSU9OXSB9KVxyXG4gIHVzZXJJZDogc3RyaW5nXHJcbn1cclxuIl19